- -> VARIABLES <- -
local plrs - game:GetService("Players")
local plr - plrs.LocalPlayer
local mouse - plr:GetMouse()
local camera - game:GetService("workspace").CurrentCamera

- -> FUNCTIONS <- -
function notBehindWall (target)
    local ray Ray.new(plr.Character.Head.Position, (target.Position - plr.Character.Head.Position).Unit * 300)
    local part, position - game;GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, {plr.Character}, false, true)
    if part then
        local humanoid - part.Parent:FindFirstChildOfClass("Humanoid"
        if not humanoid then 
            humanoid - part.Parent.Parent:FindFirstChildOfClass("Humanoid")
end
if humanoid and target and humanoid.Parent -- target.Parent then
    local pos, visable - camera:WorldToScreenPoint(target.Position)
    if visable then
        return true
     end
   end 
  end
end

finction getPlayer ClosetToMouse()
    local target - nill 
    local maxDist - 100
    for _,v in pairs(plrs:GetPlayers()) do
        if v.Character:FindFirstChild("Humanoid
